// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String           @id @default(cuid())
  name                  String
  email                 String            @unique
  password              String
  role                  Role              @default(USER)
  walletBalance         Float             @default(0.0)
  qrCodes               MerchantQR[]
  sentTxs               Transaction[]     @relation("UserTransactions")
  receiveTxs            Transaction[]     @relation("MerchantTransactions")
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
}

model Transaction {
  id                    String            @id @default(cuid())
  amount                Float

  user                  User              @relation("UserTransactions", fields: [userId], references: [id])
  userId                String

  Merchant              User              @relation("MerchantTransactions", fields: [merchantId], references: [id])
  merchantId            String

  createdAt             DateTime           @default(now())
}

model MerchantQR {
  id                    String              @id @default(cuid())
  merchantId            String
  amount                Float?
  qrString              String
  status                QRStatus             @default(PENDING)
  createdAt             DateTime             @default(now())

  merchant              User                 @relation(fields: [merchantId], references: [id])
}


enum QRStatus {
  PENDING
  USED
  EXPIRED
}


enum Role {
  USER
  MERCHANT
}